//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace 试验报表模型 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("性能试验模型")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class 性能试验模型 : global::System.Data.DataSet {
        
        private 基础数据表DataTable table基础数据表;
        
        private 测试数据表DataTable table测试数据表;
        
        private 性能曲线表DataTable table性能曲线表;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public 性能试验模型() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected 性能试验模型(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["基础数据表"] != null)) {
                    base.Tables.Add(new 基础数据表DataTable(ds.Tables["基础数据表"]));
                }
                if ((ds.Tables["测试数据表"] != null)) {
                    base.Tables.Add(new 测试数据表DataTable(ds.Tables["测试数据表"]));
                }
                if ((ds.Tables["性能曲线表"] != null)) {
                    base.Tables.Add(new 性能曲线表DataTable(ds.Tables["性能曲线表"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 基础数据表DataTable 基础数据表 {
            get {
                return this.table基础数据表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 测试数据表DataTable 测试数据表 {
            get {
                return this.table测试数据表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 性能曲线表DataTable 性能曲线表 {
            get {
                return this.table性能曲线表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            性能试验模型 cln = ((性能试验模型)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["基础数据表"] != null)) {
                    base.Tables.Add(new 基础数据表DataTable(ds.Tables["基础数据表"]));
                }
                if ((ds.Tables["测试数据表"] != null)) {
                    base.Tables.Add(new 测试数据表DataTable(ds.Tables["测试数据表"]));
                }
                if ((ds.Tables["性能曲线表"] != null)) {
                    base.Tables.Add(new 性能曲线表DataTable(ds.Tables["性能曲线表"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.table基础数据表 = ((基础数据表DataTable)(base.Tables["基础数据表"]));
            if ((initTable == true)) {
                if ((this.table基础数据表 != null)) {
                    this.table基础数据表.InitVars();
                }
            }
            this.table测试数据表 = ((测试数据表DataTable)(base.Tables["测试数据表"]));
            if ((initTable == true)) {
                if ((this.table测试数据表 != null)) {
                    this.table测试数据表.InitVars();
                }
            }
            this.table性能曲线表 = ((性能曲线表DataTable)(base.Tables["性能曲线表"]));
            if ((initTable == true)) {
                if ((this.table性能曲线表 != null)) {
                    this.table性能曲线表.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "性能试验模型";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/性能试验模型.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table基础数据表 = new 基础数据表DataTable();
            base.Tables.Add(this.table基础数据表);
            this.table测试数据表 = new 测试数据表DataTable();
            base.Tables.Add(this.table测试数据表);
            this.table性能曲线表 = new 性能曲线表DataTable();
            base.Tables.Add(this.table性能曲线表);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize基础数据表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize测试数据表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize性能曲线表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            性能试验模型 ds = new 性能试验模型();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 基础数据表RowChangeEventHandler(object sender, 基础数据表RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 测试数据表RowChangeEventHandler(object sender, 测试数据表RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 性能曲线表RowChangeEventHandler(object sender, 性能曲线表RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 基础数据表DataTable : global::System.Data.TypedTableBase<基础数据表Row> {
            
            private global::System.Data.DataColumn column型号规格;
            
            private global::System.Data.DataColumn column报告编号;
            
            private global::System.Data.DataColumn column试验地点;
            
            private global::System.Data.DataColumn column测试日期;
            
            private global::System.Data.DataColumn column室温;
            
            private global::System.Data.DataColumn column水温;
            
            private global::System.Data.DataColumn column气压;
            
            private global::System.Data.DataColumn column进扣表距;
            
            private global::System.Data.DataColumn column进口管径;
            
            private global::System.Data.DataColumn column出口管径;
            
            private global::System.Data.DataColumn column压力量程;
            
            private global::System.Data.DataColumn column流量范围;
            
            private global::System.Data.DataColumn column配用电机;
            
            private global::System.Data.DataColumn column规定转速;
            
            private global::System.Data.DataColumn column出口表距;
            
            private global::System.Data.DataColumn column保证值流量;
            
            private global::System.Data.DataColumn column保证值扬程;
            
            private global::System.Data.DataColumn column保证值转速;
            
            private global::System.Data.DataColumn column保证值泵输入功率;
            
            private global::System.Data.DataColumn column保证值泵效率;
            
            private global::System.Data.DataColumn column保证值汽蚀余量;
            
            private global::System.Data.DataColumn column电机制造厂家;
            
            private global::System.Data.DataColumn column电机型号;
            
            private global::System.Data.DataColumn column电机功率;
            
            private global::System.Data.DataColumn column电机电压;
            
            private global::System.Data.DataColumn column电机电流;
            
            private global::System.Data.DataColumn column流量仪表编号;
            
            private global::System.Data.DataColumn column流量仪表精度;
            
            private global::System.Data.DataColumn column流量仪表有效期;
            
            private global::System.Data.DataColumn column转速仪表编号;
            
            private global::System.Data.DataColumn column转速仪表精度;
            
            private global::System.Data.DataColumn column转速仪表有效期;
            
            private global::System.Data.DataColumn column入口压力仪表编号;
            
            private global::System.Data.DataColumn column入口压力仪表精度;
            
            private global::System.Data.DataColumn column入口压力仪表有效期;
            
            private global::System.Data.DataColumn column出口压力仪表编号;
            
            private global::System.Data.DataColumn column出口压力仪表精度;
            
            private global::System.Data.DataColumn column出口压力仪表有效期;
            
            private global::System.Data.DataColumn column输入功率仪表编号;
            
            private global::System.Data.DataColumn column输入功率仪表精度;
            
            private global::System.Data.DataColumn column输入功率仪表有效期;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 基础数据表DataTable() {
                this.TableName = "基础数据表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 基础数据表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 基础数据表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 型号规格Column {
                get {
                    return this.column型号规格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 报告编号Column {
                get {
                    return this.column报告编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 试验地点Column {
                get {
                    return this.column试验地点;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 测试日期Column {
                get {
                    return this.column测试日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 室温Column {
                get {
                    return this.column室温;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 水温Column {
                get {
                    return this.column水温;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 气压Column {
                get {
                    return this.column气压;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 进扣表距Column {
                get {
                    return this.column进扣表距;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 进口管径Column {
                get {
                    return this.column进口管径;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出口管径Column {
                get {
                    return this.column出口管径;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 压力量程Column {
                get {
                    return this.column压力量程;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 流量范围Column {
                get {
                    return this.column流量范围;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 配用电机Column {
                get {
                    return this.column配用电机;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 规定转速Column {
                get {
                    return this.column规定转速;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出口表距Column {
                get {
                    return this.column出口表距;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 保证值流量Column {
                get {
                    return this.column保证值流量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 保证值扬程Column {
                get {
                    return this.column保证值扬程;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 保证值转速Column {
                get {
                    return this.column保证值转速;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 保证值泵输入功率Column {
                get {
                    return this.column保证值泵输入功率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 保证值泵效率Column {
                get {
                    return this.column保证值泵效率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 保证值汽蚀余量Column {
                get {
                    return this.column保证值汽蚀余量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 电机制造厂家Column {
                get {
                    return this.column电机制造厂家;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 电机型号Column {
                get {
                    return this.column电机型号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 电机功率Column {
                get {
                    return this.column电机功率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 电机电压Column {
                get {
                    return this.column电机电压;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 电机电流Column {
                get {
                    return this.column电机电流;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 流量仪表编号Column {
                get {
                    return this.column流量仪表编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 流量仪表精度Column {
                get {
                    return this.column流量仪表精度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 流量仪表有效期Column {
                get {
                    return this.column流量仪表有效期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 转速仪表编号Column {
                get {
                    return this.column转速仪表编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 转速仪表精度Column {
                get {
                    return this.column转速仪表精度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 转速仪表有效期Column {
                get {
                    return this.column转速仪表有效期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入口压力仪表编号Column {
                get {
                    return this.column入口压力仪表编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入口压力仪表精度Column {
                get {
                    return this.column入口压力仪表精度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 入口压力仪表有效期Column {
                get {
                    return this.column入口压力仪表有效期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出口压力仪表编号Column {
                get {
                    return this.column出口压力仪表编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出口压力仪表精度Column {
                get {
                    return this.column出口压力仪表精度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出口压力仪表有效期Column {
                get {
                    return this.column出口压力仪表有效期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 输入功率仪表编号Column {
                get {
                    return this.column输入功率仪表编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 输入功率仪表精度Column {
                get {
                    return this.column输入功率仪表精度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 输入功率仪表有效期Column {
                get {
                    return this.column输入功率仪表有效期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 基础数据表Row this[int index] {
                get {
                    return ((基础数据表Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 基础数据表RowChangeEventHandler 基础数据表RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 基础数据表RowChangeEventHandler 基础数据表RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 基础数据表RowChangeEventHandler 基础数据表RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 基础数据表RowChangeEventHandler 基础数据表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add基础数据表Row(基础数据表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 基础数据表Row Add基础数据表Row(
                        string 型号规格, 
                        string 报告编号, 
                        string 试验地点, 
                        string 测试日期, 
                        string 室温, 
                        string 水温, 
                        string 气压, 
                        string 进扣表距, 
                        string 进口管径, 
                        string 出口管径, 
                        string 压力量程, 
                        string 流量范围, 
                        string 配用电机, 
                        string 规定转速, 
                        string 出口表距, 
                        string 保证值流量, 
                        string 保证值扬程, 
                        string 保证值转速, 
                        string 保证值泵输入功率, 
                        string 保证值泵效率, 
                        string 保证值汽蚀余量, 
                        string 电机制造厂家, 
                        string 电机型号, 
                        string 电机功率, 
                        string 电机电压, 
                        string 电机电流, 
                        string 流量仪表编号, 
                        string 流量仪表精度, 
                        string 流量仪表有效期, 
                        string 转速仪表编号, 
                        string 转速仪表精度, 
                        string 转速仪表有效期, 
                        string 入口压力仪表编号, 
                        string 入口压力仪表精度, 
                        string 入口压力仪表有效期, 
                        string 出口压力仪表编号, 
                        string 出口压力仪表精度, 
                        string 出口压力仪表有效期, 
                        string 输入功率仪表编号, 
                        string 输入功率仪表精度, 
                        string 输入功率仪表有效期) {
                基础数据表Row row基础数据表Row = ((基础数据表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        型号规格,
                        报告编号,
                        试验地点,
                        测试日期,
                        室温,
                        水温,
                        气压,
                        进扣表距,
                        进口管径,
                        出口管径,
                        压力量程,
                        流量范围,
                        配用电机,
                        规定转速,
                        出口表距,
                        保证值流量,
                        保证值扬程,
                        保证值转速,
                        保证值泵输入功率,
                        保证值泵效率,
                        保证值汽蚀余量,
                        电机制造厂家,
                        电机型号,
                        电机功率,
                        电机电压,
                        电机电流,
                        流量仪表编号,
                        流量仪表精度,
                        流量仪表有效期,
                        转速仪表编号,
                        转速仪表精度,
                        转速仪表有效期,
                        入口压力仪表编号,
                        入口压力仪表精度,
                        入口压力仪表有效期,
                        出口压力仪表编号,
                        出口压力仪表精度,
                        出口压力仪表有效期,
                        输入功率仪表编号,
                        输入功率仪表精度,
                        输入功率仪表有效期};
                row基础数据表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row基础数据表Row);
                return row基础数据表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                基础数据表DataTable cln = ((基础数据表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 基础数据表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column型号规格 = base.Columns["型号规格"];
                this.column报告编号 = base.Columns["报告编号"];
                this.column试验地点 = base.Columns["试验地点"];
                this.column测试日期 = base.Columns["测试日期"];
                this.column室温 = base.Columns["室温"];
                this.column水温 = base.Columns["水温"];
                this.column气压 = base.Columns["气压"];
                this.column进扣表距 = base.Columns["进扣表距"];
                this.column进口管径 = base.Columns["进口管径"];
                this.column出口管径 = base.Columns["出口管径"];
                this.column压力量程 = base.Columns["压力量程"];
                this.column流量范围 = base.Columns["流量范围"];
                this.column配用电机 = base.Columns["配用电机"];
                this.column规定转速 = base.Columns["规定转速"];
                this.column出口表距 = base.Columns["出口表距"];
                this.column保证值流量 = base.Columns["保证值流量"];
                this.column保证值扬程 = base.Columns["保证值扬程"];
                this.column保证值转速 = base.Columns["保证值转速"];
                this.column保证值泵输入功率 = base.Columns["保证值泵输入功率"];
                this.column保证值泵效率 = base.Columns["保证值泵效率"];
                this.column保证值汽蚀余量 = base.Columns["保证值汽蚀余量"];
                this.column电机制造厂家 = base.Columns["电机制造厂家"];
                this.column电机型号 = base.Columns["电机型号"];
                this.column电机功率 = base.Columns["电机功率"];
                this.column电机电压 = base.Columns["电机电压"];
                this.column电机电流 = base.Columns["电机电流"];
                this.column流量仪表编号 = base.Columns["流量仪表编号"];
                this.column流量仪表精度 = base.Columns["流量仪表精度"];
                this.column流量仪表有效期 = base.Columns["流量仪表有效期"];
                this.column转速仪表编号 = base.Columns["转速仪表编号"];
                this.column转速仪表精度 = base.Columns["转速仪表精度"];
                this.column转速仪表有效期 = base.Columns["转速仪表有效期"];
                this.column入口压力仪表编号 = base.Columns["入口压力仪表编号"];
                this.column入口压力仪表精度 = base.Columns["入口压力仪表精度"];
                this.column入口压力仪表有效期 = base.Columns["入口压力仪表有效期"];
                this.column出口压力仪表编号 = base.Columns["出口压力仪表编号"];
                this.column出口压力仪表精度 = base.Columns["出口压力仪表精度"];
                this.column出口压力仪表有效期 = base.Columns["出口压力仪表有效期"];
                this.column输入功率仪表编号 = base.Columns["输入功率仪表编号"];
                this.column输入功率仪表精度 = base.Columns["输入功率仪表精度"];
                this.column输入功率仪表有效期 = base.Columns["输入功率仪表有效期"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column型号规格 = new global::System.Data.DataColumn("型号规格", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column型号规格);
                this.column报告编号 = new global::System.Data.DataColumn("报告编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column报告编号);
                this.column试验地点 = new global::System.Data.DataColumn("试验地点", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column试验地点);
                this.column测试日期 = new global::System.Data.DataColumn("测试日期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column测试日期);
                this.column室温 = new global::System.Data.DataColumn("室温", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column室温);
                this.column水温 = new global::System.Data.DataColumn("水温", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column水温);
                this.column气压 = new global::System.Data.DataColumn("气压", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column气压);
                this.column进扣表距 = new global::System.Data.DataColumn("进扣表距", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column进扣表距);
                this.column进口管径 = new global::System.Data.DataColumn("进口管径", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column进口管径);
                this.column出口管径 = new global::System.Data.DataColumn("出口管径", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出口管径);
                this.column压力量程 = new global::System.Data.DataColumn("压力量程", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column压力量程);
                this.column流量范围 = new global::System.Data.DataColumn("流量范围", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column流量范围);
                this.column配用电机 = new global::System.Data.DataColumn("配用电机", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column配用电机);
                this.column规定转速 = new global::System.Data.DataColumn("规定转速", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规定转速);
                this.column出口表距 = new global::System.Data.DataColumn("出口表距", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出口表距);
                this.column保证值流量 = new global::System.Data.DataColumn("保证值流量", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column保证值流量);
                this.column保证值扬程 = new global::System.Data.DataColumn("保证值扬程", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column保证值扬程);
                this.column保证值转速 = new global::System.Data.DataColumn("保证值转速", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column保证值转速);
                this.column保证值泵输入功率 = new global::System.Data.DataColumn("保证值泵输入功率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column保证值泵输入功率);
                this.column保证值泵效率 = new global::System.Data.DataColumn("保证值泵效率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column保证值泵效率);
                this.column保证值汽蚀余量 = new global::System.Data.DataColumn("保证值汽蚀余量", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column保证值汽蚀余量);
                this.column电机制造厂家 = new global::System.Data.DataColumn("电机制造厂家", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电机制造厂家);
                this.column电机型号 = new global::System.Data.DataColumn("电机型号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电机型号);
                this.column电机功率 = new global::System.Data.DataColumn("电机功率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电机功率);
                this.column电机电压 = new global::System.Data.DataColumn("电机电压", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电机电压);
                this.column电机电流 = new global::System.Data.DataColumn("电机电流", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电机电流);
                this.column流量仪表编号 = new global::System.Data.DataColumn("流量仪表编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column流量仪表编号);
                this.column流量仪表精度 = new global::System.Data.DataColumn("流量仪表精度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column流量仪表精度);
                this.column流量仪表有效期 = new global::System.Data.DataColumn("流量仪表有效期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column流量仪表有效期);
                this.column转速仪表编号 = new global::System.Data.DataColumn("转速仪表编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column转速仪表编号);
                this.column转速仪表精度 = new global::System.Data.DataColumn("转速仪表精度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column转速仪表精度);
                this.column转速仪表有效期 = new global::System.Data.DataColumn("转速仪表有效期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column转速仪表有效期);
                this.column入口压力仪表编号 = new global::System.Data.DataColumn("入口压力仪表编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入口压力仪表编号);
                this.column入口压力仪表精度 = new global::System.Data.DataColumn("入口压力仪表精度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入口压力仪表精度);
                this.column入口压力仪表有效期 = new global::System.Data.DataColumn("入口压力仪表有效期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入口压力仪表有效期);
                this.column出口压力仪表编号 = new global::System.Data.DataColumn("出口压力仪表编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出口压力仪表编号);
                this.column出口压力仪表精度 = new global::System.Data.DataColumn("出口压力仪表精度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出口压力仪表精度);
                this.column出口压力仪表有效期 = new global::System.Data.DataColumn("出口压力仪表有效期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出口压力仪表有效期);
                this.column输入功率仪表编号 = new global::System.Data.DataColumn("输入功率仪表编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column输入功率仪表编号);
                this.column输入功率仪表精度 = new global::System.Data.DataColumn("输入功率仪表精度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column输入功率仪表精度);
                this.column输入功率仪表有效期 = new global::System.Data.DataColumn("输入功率仪表有效期", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column输入功率仪表有效期);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 基础数据表Row New基础数据表Row() {
                return ((基础数据表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 基础数据表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(基础数据表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.基础数据表RowChanged != null)) {
                    this.基础数据表RowChanged(this, new 基础数据表RowChangeEvent(((基础数据表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.基础数据表RowChanging != null)) {
                    this.基础数据表RowChanging(this, new 基础数据表RowChangeEvent(((基础数据表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.基础数据表RowDeleted != null)) {
                    this.基础数据表RowDeleted(this, new 基础数据表RowChangeEvent(((基础数据表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.基础数据表RowDeleting != null)) {
                    this.基础数据表RowDeleting(this, new 基础数据表RowChangeEvent(((基础数据表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove基础数据表Row(基础数据表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                性能试验模型 ds = new 性能试验模型();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "基础数据表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 测试数据表DataTable : global::System.Data.TypedTableBase<测试数据表Row> {
            
            private global::System.Data.DataColumn column流量;
            
            private global::System.Data.DataColumn column输入功率;
            
            private global::System.Data.DataColumn column转速;
            
            private global::System.Data.DataColumn column轴功率;
            
            private global::System.Data.DataColumn column出口压力;
            
            private global::System.Data.DataColumn column扬程;
            
            private global::System.Data.DataColumn column额定转速流量;
            
            private global::System.Data.DataColumn column额定转速扬程;
            
            private global::System.Data.DataColumn column额定转速轴功率;
            
            private global::System.Data.DataColumn column额定转速泵效率;
            
            private global::System.Data.DataColumn column额定转速机组效率;
            
            private global::System.Data.DataColumn column电压;
            
            private global::System.Data.DataColumn column电流;
            
            private global::System.Data.DataColumn column序号;
            
            private global::System.Data.DataColumn column进口压力;
            
            private global::System.Data.DataColumn column行状态;
            
            private global::System.Data.DataColumn column功率因数;
            
            private global::System.Data.DataColumn column机组效率;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 测试数据表DataTable() {
                this.TableName = "测试数据表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 测试数据表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 测试数据表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 流量Column {
                get {
                    return this.column流量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 输入功率Column {
                get {
                    return this.column输入功率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 转速Column {
                get {
                    return this.column转速;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 轴功率Column {
                get {
                    return this.column轴功率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出口压力Column {
                get {
                    return this.column出口压力;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 扬程Column {
                get {
                    return this.column扬程;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 额定转速流量Column {
                get {
                    return this.column额定转速流量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 额定转速扬程Column {
                get {
                    return this.column额定转速扬程;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 额定转速轴功率Column {
                get {
                    return this.column额定转速轴功率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 额定转速泵效率Column {
                get {
                    return this.column额定转速泵效率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 额定转速机组效率Column {
                get {
                    return this.column额定转速机组效率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 电压Column {
                get {
                    return this.column电压;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 电流Column {
                get {
                    return this.column电流;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 序号Column {
                get {
                    return this.column序号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 进口压力Column {
                get {
                    return this.column进口压力;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 行状态Column {
                get {
                    return this.column行状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 功率因数Column {
                get {
                    return this.column功率因数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 机组效率Column {
                get {
                    return this.column机组效率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 测试数据表Row this[int index] {
                get {
                    return ((测试数据表Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 测试数据表RowChangeEventHandler 测试数据表RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 测试数据表RowChangeEventHandler 测试数据表RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 测试数据表RowChangeEventHandler 测试数据表RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 测试数据表RowChangeEventHandler 测试数据表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add测试数据表Row(测试数据表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 测试数据表Row Add测试数据表Row(
                        string 流量, 
                        string 输入功率, 
                        string 转速, 
                        string 轴功率, 
                        string 出口压力, 
                        string 扬程, 
                        string 额定转速流量, 
                        string 额定转速扬程, 
                        string 额定转速轴功率, 
                        string 额定转速泵效率, 
                        string 额定转速机组效率, 
                        string 电压, 
                        string 电流, 
                        string 序号, 
                        string 进口压力, 
                        string 行状态, 
                        string 功率因数, 
                        string 机组效率) {
                测试数据表Row row测试数据表Row = ((测试数据表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        流量,
                        输入功率,
                        转速,
                        轴功率,
                        出口压力,
                        扬程,
                        额定转速流量,
                        额定转速扬程,
                        额定转速轴功率,
                        额定转速泵效率,
                        额定转速机组效率,
                        电压,
                        电流,
                        序号,
                        进口压力,
                        行状态,
                        功率因数,
                        机组效率};
                row测试数据表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row测试数据表Row);
                return row测试数据表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                测试数据表DataTable cln = ((测试数据表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 测试数据表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column流量 = base.Columns["流量"];
                this.column输入功率 = base.Columns["输入功率"];
                this.column转速 = base.Columns["转速"];
                this.column轴功率 = base.Columns["轴功率"];
                this.column出口压力 = base.Columns["出口压力"];
                this.column扬程 = base.Columns["扬程"];
                this.column额定转速流量 = base.Columns["额定转速流量"];
                this.column额定转速扬程 = base.Columns["额定转速扬程"];
                this.column额定转速轴功率 = base.Columns["额定转速轴功率"];
                this.column额定转速泵效率 = base.Columns["额定转速泵效率"];
                this.column额定转速机组效率 = base.Columns["额定转速机组效率"];
                this.column电压 = base.Columns["电压"];
                this.column电流 = base.Columns["电流"];
                this.column序号 = base.Columns["序号"];
                this.column进口压力 = base.Columns["进口压力"];
                this.column行状态 = base.Columns["行状态"];
                this.column功率因数 = base.Columns["功率因数"];
                this.column机组效率 = base.Columns["机组效率"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column流量 = new global::System.Data.DataColumn("流量", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column流量);
                this.column输入功率 = new global::System.Data.DataColumn("输入功率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column输入功率);
                this.column转速 = new global::System.Data.DataColumn("转速", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column转速);
                this.column轴功率 = new global::System.Data.DataColumn("轴功率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column轴功率);
                this.column出口压力 = new global::System.Data.DataColumn("出口压力", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出口压力);
                this.column扬程 = new global::System.Data.DataColumn("扬程", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column扬程);
                this.column额定转速流量 = new global::System.Data.DataColumn("额定转速流量", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column额定转速流量);
                this.column额定转速扬程 = new global::System.Data.DataColumn("额定转速扬程", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column额定转速扬程);
                this.column额定转速轴功率 = new global::System.Data.DataColumn("额定转速轴功率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column额定转速轴功率);
                this.column额定转速泵效率 = new global::System.Data.DataColumn("额定转速泵效率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column额定转速泵效率);
                this.column额定转速机组效率 = new global::System.Data.DataColumn("额定转速机组效率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column额定转速机组效率);
                this.column电压 = new global::System.Data.DataColumn("电压", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电压);
                this.column电流 = new global::System.Data.DataColumn("电流", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电流);
                this.column序号 = new global::System.Data.DataColumn("序号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column序号);
                this.column进口压力 = new global::System.Data.DataColumn("进口压力", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column进口压力);
                this.column行状态 = new global::System.Data.DataColumn("行状态", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column行状态);
                this.column功率因数 = new global::System.Data.DataColumn("功率因数", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column功率因数);
                this.column机组效率 = new global::System.Data.DataColumn("机组效率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column机组效率);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 测试数据表Row New测试数据表Row() {
                return ((测试数据表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 测试数据表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(测试数据表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.测试数据表RowChanged != null)) {
                    this.测试数据表RowChanged(this, new 测试数据表RowChangeEvent(((测试数据表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.测试数据表RowChanging != null)) {
                    this.测试数据表RowChanging(this, new 测试数据表RowChangeEvent(((测试数据表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.测试数据表RowDeleted != null)) {
                    this.测试数据表RowDeleted(this, new 测试数据表RowChangeEvent(((测试数据表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.测试数据表RowDeleting != null)) {
                    this.测试数据表RowDeleting(this, new 测试数据表RowChangeEvent(((测试数据表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove测试数据表Row(测试数据表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                性能试验模型 ds = new 性能试验模型();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "测试数据表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 性能曲线表DataTable : global::System.Data.TypedTableBase<性能曲线表Row> {
            
            private global::System.Data.DataColumn column性能试验图片信息;
            
            private global::System.Data.DataColumn column汽蚀试验图片信息;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 性能曲线表DataTable() {
                this.TableName = "性能曲线表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 性能曲线表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 性能曲线表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 性能试验图片信息Column {
                get {
                    return this.column性能试验图片信息;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 汽蚀试验图片信息Column {
                get {
                    return this.column汽蚀试验图片信息;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 性能曲线表Row this[int index] {
                get {
                    return ((性能曲线表Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 性能曲线表RowChangeEventHandler 性能曲线表RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 性能曲线表RowChangeEventHandler 性能曲线表RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 性能曲线表RowChangeEventHandler 性能曲线表RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 性能曲线表RowChangeEventHandler 性能曲线表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add性能曲线表Row(性能曲线表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 性能曲线表Row Add性能曲线表Row(byte[] 性能试验图片信息, byte[] 汽蚀试验图片信息) {
                性能曲线表Row row性能曲线表Row = ((性能曲线表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        性能试验图片信息,
                        汽蚀试验图片信息};
                row性能曲线表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row性能曲线表Row);
                return row性能曲线表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                性能曲线表DataTable cln = ((性能曲线表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 性能曲线表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column性能试验图片信息 = base.Columns["性能试验图片信息"];
                this.column汽蚀试验图片信息 = base.Columns["汽蚀试验图片信息"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column性能试验图片信息 = new global::System.Data.DataColumn("性能试验图片信息", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column性能试验图片信息);
                this.column汽蚀试验图片信息 = new global::System.Data.DataColumn("汽蚀试验图片信息", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column汽蚀试验图片信息);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 性能曲线表Row New性能曲线表Row() {
                return ((性能曲线表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 性能曲线表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(性能曲线表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.性能曲线表RowChanged != null)) {
                    this.性能曲线表RowChanged(this, new 性能曲线表RowChangeEvent(((性能曲线表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.性能曲线表RowChanging != null)) {
                    this.性能曲线表RowChanging(this, new 性能曲线表RowChangeEvent(((性能曲线表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.性能曲线表RowDeleted != null)) {
                    this.性能曲线表RowDeleted(this, new 性能曲线表RowChangeEvent(((性能曲线表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.性能曲线表RowDeleting != null)) {
                    this.性能曲线表RowDeleting(this, new 性能曲线表RowChangeEvent(((性能曲线表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove性能曲线表Row(性能曲线表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                性能试验模型 ds = new 性能试验模型();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "性能曲线表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 基础数据表Row : global::System.Data.DataRow {
            
            private 基础数据表DataTable table基础数据表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 基础数据表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table基础数据表 = ((基础数据表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 型号规格 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.型号规格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“型号规格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.型号规格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 报告编号 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.报告编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“报告编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.报告编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 试验地点 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.试验地点Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“试验地点”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.试验地点Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 测试日期 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.测试日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“测试日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.测试日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 室温 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.室温Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“室温”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.室温Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 水温 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.水温Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“水温”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.水温Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 气压 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.气压Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“气压”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.气压Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 进扣表距 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.进扣表距Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“进扣表距”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.进扣表距Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 进口管径 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.进口管径Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“进口管径”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.进口管径Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 出口管径 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.出口管径Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“出口管径”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.出口管径Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 压力量程 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.压力量程Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“压力量程”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.压力量程Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 流量范围 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.流量范围Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“流量范围”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.流量范围Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 配用电机 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.配用电机Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“配用电机”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.配用电机Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 规定转速 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.规定转速Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“规定转速”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.规定转速Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 出口表距 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.出口表距Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“出口表距”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.出口表距Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 保证值流量 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.保证值流量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“保证值流量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.保证值流量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 保证值扬程 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.保证值扬程Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“保证值扬程”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.保证值扬程Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 保证值转速 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.保证值转速Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“保证值转速”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.保证值转速Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 保证值泵输入功率 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.保证值泵输入功率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“保证值泵输入功率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.保证值泵输入功率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 保证值泵效率 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.保证值泵效率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“保证值泵效率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.保证值泵效率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 保证值汽蚀余量 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.保证值汽蚀余量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“保证值汽蚀余量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.保证值汽蚀余量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 电机制造厂家 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.电机制造厂家Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“电机制造厂家”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.电机制造厂家Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 电机型号 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.电机型号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“电机型号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.电机型号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 电机功率 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.电机功率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“电机功率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.电机功率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 电机电压 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.电机电压Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“电机电压”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.电机电压Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 电机电流 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.电机电流Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“电机电流”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.电机电流Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 流量仪表编号 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.流量仪表编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“流量仪表编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.流量仪表编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 流量仪表精度 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.流量仪表精度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“流量仪表精度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.流量仪表精度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 流量仪表有效期 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.流量仪表有效期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“流量仪表有效期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.流量仪表有效期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 转速仪表编号 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.转速仪表编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“转速仪表编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.转速仪表编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 转速仪表精度 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.转速仪表精度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“转速仪表精度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.转速仪表精度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 转速仪表有效期 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.转速仪表有效期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“转速仪表有效期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.转速仪表有效期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 入口压力仪表编号 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.入口压力仪表编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“入口压力仪表编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.入口压力仪表编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 入口压力仪表精度 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.入口压力仪表精度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“入口压力仪表精度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.入口压力仪表精度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 入口压力仪表有效期 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.入口压力仪表有效期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“入口压力仪表有效期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.入口压力仪表有效期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 出口压力仪表编号 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.出口压力仪表编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“出口压力仪表编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.出口压力仪表编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 出口压力仪表精度 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.出口压力仪表精度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“出口压力仪表精度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.出口压力仪表精度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 出口压力仪表有效期 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.出口压力仪表有效期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“出口压力仪表有效期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.出口压力仪表有效期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 输入功率仪表编号 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.输入功率仪表编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“输入功率仪表编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.输入功率仪表编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 输入功率仪表精度 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.输入功率仪表精度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“输入功率仪表精度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.输入功率仪表精度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 输入功率仪表有效期 {
                get {
                    try {
                        return ((string)(this[this.table基础数据表.输入功率仪表有效期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“基础数据表”中列“输入功率仪表有效期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table基础数据表.输入功率仪表有效期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is型号规格Null() {
                return this.IsNull(this.table基础数据表.型号规格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set型号规格Null() {
                this[this.table基础数据表.型号规格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is报告编号Null() {
                return this.IsNull(this.table基础数据表.报告编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set报告编号Null() {
                this[this.table基础数据表.报告编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is试验地点Null() {
                return this.IsNull(this.table基础数据表.试验地点Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set试验地点Null() {
                this[this.table基础数据表.试验地点Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is测试日期Null() {
                return this.IsNull(this.table基础数据表.测试日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set测试日期Null() {
                this[this.table基础数据表.测试日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is室温Null() {
                return this.IsNull(this.table基础数据表.室温Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set室温Null() {
                this[this.table基础数据表.室温Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is水温Null() {
                return this.IsNull(this.table基础数据表.水温Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set水温Null() {
                this[this.table基础数据表.水温Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is气压Null() {
                return this.IsNull(this.table基础数据表.气压Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set气压Null() {
                this[this.table基础数据表.气压Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is进扣表距Null() {
                return this.IsNull(this.table基础数据表.进扣表距Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set进扣表距Null() {
                this[this.table基础数据表.进扣表距Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is进口管径Null() {
                return this.IsNull(this.table基础数据表.进口管径Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set进口管径Null() {
                this[this.table基础数据表.进口管径Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出口管径Null() {
                return this.IsNull(this.table基础数据表.出口管径Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出口管径Null() {
                this[this.table基础数据表.出口管径Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is压力量程Null() {
                return this.IsNull(this.table基础数据表.压力量程Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set压力量程Null() {
                this[this.table基础数据表.压力量程Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is流量范围Null() {
                return this.IsNull(this.table基础数据表.流量范围Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set流量范围Null() {
                this[this.table基础数据表.流量范围Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is配用电机Null() {
                return this.IsNull(this.table基础数据表.配用电机Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set配用电机Null() {
                this[this.table基础数据表.配用电机Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is规定转速Null() {
                return this.IsNull(this.table基础数据表.规定转速Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set规定转速Null() {
                this[this.table基础数据表.规定转速Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出口表距Null() {
                return this.IsNull(this.table基础数据表.出口表距Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出口表距Null() {
                this[this.table基础数据表.出口表距Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is保证值流量Null() {
                return this.IsNull(this.table基础数据表.保证值流量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set保证值流量Null() {
                this[this.table基础数据表.保证值流量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is保证值扬程Null() {
                return this.IsNull(this.table基础数据表.保证值扬程Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set保证值扬程Null() {
                this[this.table基础数据表.保证值扬程Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is保证值转速Null() {
                return this.IsNull(this.table基础数据表.保证值转速Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set保证值转速Null() {
                this[this.table基础数据表.保证值转速Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is保证值泵输入功率Null() {
                return this.IsNull(this.table基础数据表.保证值泵输入功率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set保证值泵输入功率Null() {
                this[this.table基础数据表.保证值泵输入功率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is保证值泵效率Null() {
                return this.IsNull(this.table基础数据表.保证值泵效率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set保证值泵效率Null() {
                this[this.table基础数据表.保证值泵效率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is保证值汽蚀余量Null() {
                return this.IsNull(this.table基础数据表.保证值汽蚀余量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set保证值汽蚀余量Null() {
                this[this.table基础数据表.保证值汽蚀余量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is电机制造厂家Null() {
                return this.IsNull(this.table基础数据表.电机制造厂家Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set电机制造厂家Null() {
                this[this.table基础数据表.电机制造厂家Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is电机型号Null() {
                return this.IsNull(this.table基础数据表.电机型号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set电机型号Null() {
                this[this.table基础数据表.电机型号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is电机功率Null() {
                return this.IsNull(this.table基础数据表.电机功率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set电机功率Null() {
                this[this.table基础数据表.电机功率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is电机电压Null() {
                return this.IsNull(this.table基础数据表.电机电压Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set电机电压Null() {
                this[this.table基础数据表.电机电压Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is电机电流Null() {
                return this.IsNull(this.table基础数据表.电机电流Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set电机电流Null() {
                this[this.table基础数据表.电机电流Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is流量仪表编号Null() {
                return this.IsNull(this.table基础数据表.流量仪表编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set流量仪表编号Null() {
                this[this.table基础数据表.流量仪表编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is流量仪表精度Null() {
                return this.IsNull(this.table基础数据表.流量仪表精度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set流量仪表精度Null() {
                this[this.table基础数据表.流量仪表精度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is流量仪表有效期Null() {
                return this.IsNull(this.table基础数据表.流量仪表有效期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set流量仪表有效期Null() {
                this[this.table基础数据表.流量仪表有效期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is转速仪表编号Null() {
                return this.IsNull(this.table基础数据表.转速仪表编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set转速仪表编号Null() {
                this[this.table基础数据表.转速仪表编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is转速仪表精度Null() {
                return this.IsNull(this.table基础数据表.转速仪表精度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set转速仪表精度Null() {
                this[this.table基础数据表.转速仪表精度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is转速仪表有效期Null() {
                return this.IsNull(this.table基础数据表.转速仪表有效期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set转速仪表有效期Null() {
                this[this.table基础数据表.转速仪表有效期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入口压力仪表编号Null() {
                return this.IsNull(this.table基础数据表.入口压力仪表编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入口压力仪表编号Null() {
                this[this.table基础数据表.入口压力仪表编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入口压力仪表精度Null() {
                return this.IsNull(this.table基础数据表.入口压力仪表精度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入口压力仪表精度Null() {
                this[this.table基础数据表.入口压力仪表精度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is入口压力仪表有效期Null() {
                return this.IsNull(this.table基础数据表.入口压力仪表有效期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set入口压力仪表有效期Null() {
                this[this.table基础数据表.入口压力仪表有效期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出口压力仪表编号Null() {
                return this.IsNull(this.table基础数据表.出口压力仪表编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出口压力仪表编号Null() {
                this[this.table基础数据表.出口压力仪表编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出口压力仪表精度Null() {
                return this.IsNull(this.table基础数据表.出口压力仪表精度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出口压力仪表精度Null() {
                this[this.table基础数据表.出口压力仪表精度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出口压力仪表有效期Null() {
                return this.IsNull(this.table基础数据表.出口压力仪表有效期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出口压力仪表有效期Null() {
                this[this.table基础数据表.出口压力仪表有效期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is输入功率仪表编号Null() {
                return this.IsNull(this.table基础数据表.输入功率仪表编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set输入功率仪表编号Null() {
                this[this.table基础数据表.输入功率仪表编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is输入功率仪表精度Null() {
                return this.IsNull(this.table基础数据表.输入功率仪表精度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set输入功率仪表精度Null() {
                this[this.table基础数据表.输入功率仪表精度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is输入功率仪表有效期Null() {
                return this.IsNull(this.table基础数据表.输入功率仪表有效期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set输入功率仪表有效期Null() {
                this[this.table基础数据表.输入功率仪表有效期Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 测试数据表Row : global::System.Data.DataRow {
            
            private 测试数据表DataTable table测试数据表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 测试数据表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table测试数据表 = ((测试数据表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 流量 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.流量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“流量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.流量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 输入功率 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.输入功率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“输入功率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.输入功率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 转速 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.转速Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“转速”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.转速Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 轴功率 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.轴功率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“轴功率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.轴功率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 出口压力 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.出口压力Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“出口压力”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.出口压力Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 扬程 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.扬程Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“扬程”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.扬程Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 额定转速流量 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.额定转速流量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“额定转速流量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.额定转速流量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 额定转速扬程 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.额定转速扬程Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“额定转速扬程”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.额定转速扬程Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 额定转速轴功率 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.额定转速轴功率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“额定转速轴功率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.额定转速轴功率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 额定转速泵效率 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.额定转速泵效率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“额定转速泵效率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.额定转速泵效率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 额定转速机组效率 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.额定转速机组效率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“额定转速机组效率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.额定转速机组效率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 电压 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.电压Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“电压”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.电压Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 电流 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.电流Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“电流”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.电流Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 序号 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.序号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“序号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.序号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 进口压力 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.进口压力Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“进口压力”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.进口压力Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 行状态 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.行状态Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“行状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.行状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 功率因数 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.功率因数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“功率因数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.功率因数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 机组效率 {
                get {
                    try {
                        return ((string)(this[this.table测试数据表.机组效率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“测试数据表”中列“机组效率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table测试数据表.机组效率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is流量Null() {
                return this.IsNull(this.table测试数据表.流量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set流量Null() {
                this[this.table测试数据表.流量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is输入功率Null() {
                return this.IsNull(this.table测试数据表.输入功率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set输入功率Null() {
                this[this.table测试数据表.输入功率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is转速Null() {
                return this.IsNull(this.table测试数据表.转速Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set转速Null() {
                this[this.table测试数据表.转速Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is轴功率Null() {
                return this.IsNull(this.table测试数据表.轴功率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set轴功率Null() {
                this[this.table测试数据表.轴功率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is出口压力Null() {
                return this.IsNull(this.table测试数据表.出口压力Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set出口压力Null() {
                this[this.table测试数据表.出口压力Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is扬程Null() {
                return this.IsNull(this.table测试数据表.扬程Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set扬程Null() {
                this[this.table测试数据表.扬程Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is额定转速流量Null() {
                return this.IsNull(this.table测试数据表.额定转速流量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set额定转速流量Null() {
                this[this.table测试数据表.额定转速流量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is额定转速扬程Null() {
                return this.IsNull(this.table测试数据表.额定转速扬程Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set额定转速扬程Null() {
                this[this.table测试数据表.额定转速扬程Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is额定转速轴功率Null() {
                return this.IsNull(this.table测试数据表.额定转速轴功率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set额定转速轴功率Null() {
                this[this.table测试数据表.额定转速轴功率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is额定转速泵效率Null() {
                return this.IsNull(this.table测试数据表.额定转速泵效率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set额定转速泵效率Null() {
                this[this.table测试数据表.额定转速泵效率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is额定转速机组效率Null() {
                return this.IsNull(this.table测试数据表.额定转速机组效率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set额定转速机组效率Null() {
                this[this.table测试数据表.额定转速机组效率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is电压Null() {
                return this.IsNull(this.table测试数据表.电压Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set电压Null() {
                this[this.table测试数据表.电压Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is电流Null() {
                return this.IsNull(this.table测试数据表.电流Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set电流Null() {
                this[this.table测试数据表.电流Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is序号Null() {
                return this.IsNull(this.table测试数据表.序号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set序号Null() {
                this[this.table测试数据表.序号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is进口压力Null() {
                return this.IsNull(this.table测试数据表.进口压力Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set进口压力Null() {
                this[this.table测试数据表.进口压力Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is行状态Null() {
                return this.IsNull(this.table测试数据表.行状态Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set行状态Null() {
                this[this.table测试数据表.行状态Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is功率因数Null() {
                return this.IsNull(this.table测试数据表.功率因数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set功率因数Null() {
                this[this.table测试数据表.功率因数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is机组效率Null() {
                return this.IsNull(this.table测试数据表.机组效率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set机组效率Null() {
                this[this.table测试数据表.机组效率Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 性能曲线表Row : global::System.Data.DataRow {
            
            private 性能曲线表DataTable table性能曲线表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 性能曲线表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table性能曲线表 = ((性能曲线表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] 性能试验图片信息 {
                get {
                    try {
                        return ((byte[])(this[this.table性能曲线表.性能试验图片信息Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“性能曲线表”中列“性能试验图片信息”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table性能曲线表.性能试验图片信息Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] 汽蚀试验图片信息 {
                get {
                    try {
                        return ((byte[])(this[this.table性能曲线表.汽蚀试验图片信息Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“性能曲线表”中列“汽蚀试验图片信息”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table性能曲线表.汽蚀试验图片信息Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is性能试验图片信息Null() {
                return this.IsNull(this.table性能曲线表.性能试验图片信息Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set性能试验图片信息Null() {
                this[this.table性能曲线表.性能试验图片信息Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is汽蚀试验图片信息Null() {
                return this.IsNull(this.table性能曲线表.汽蚀试验图片信息Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set汽蚀试验图片信息Null() {
                this[this.table性能曲线表.汽蚀试验图片信息Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 基础数据表RowChangeEvent : global::System.EventArgs {
            
            private 基础数据表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 基础数据表RowChangeEvent(基础数据表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 基础数据表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 测试数据表RowChangeEvent : global::System.EventArgs {
            
            private 测试数据表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 测试数据表RowChangeEvent(测试数据表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 测试数据表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 性能曲线表RowChangeEvent : global::System.EventArgs {
            
            private 性能曲线表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 性能曲线表RowChangeEvent(性能曲线表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 性能曲线表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591